#!/usr/bin/env bash

# TODO: convert args to proper flags/params
# TODO: validate and trim gherkin starting keywords (When, Then, etc)
# TODO: only assertions ("Then"s) should result in green checks
# TODO: add "missing scenario" check
# TODO: add "missing scenario" auto-scaffolding
# TODO: add results table
# TODO: make "STEPS" associative array name configurable

if command -v tput &>/dev/null && tty -s; then
  RED=$(tput setaf 1)
  GREEN=$(tput setaf 2)
  NORMAL=$(tput sgr0)
else
  RED=$(echo -en "\e[31m")
  GREEN=$(echo -en "\e[32m")
  NORMAL=$(echo -en "\e[00m")
fi

declare -a defs
declare -a funcs

function When () {
  step "$1" "$2"
}

function Then () {
  step "$1" "$2"
}

function step () {
  defs+=( "$1" )
  funcs+=( "$2" )
}

feature=`cat $1`
source "$2"

to_values_list () {
  local -n outlist=$1
  local -n inmap=$2

  for param in "${!inmap[@]}"; do
    if [[ $param == "0" ]]
    then
      continue
    fi
      outlist+=(${inmap[$param]})
  done
}

for i in ${!defs[@]}; do
  if [[ "$feature" =~ ${defs[i]} ]]
  then
    list=()
    to_values_list list BASH_REMATCH
    ${funcs["$i"]} ${list[@]}
    if [[ $? -eq 0 ]]
    then
      printf "\n${GREEN}✔ ${NORMAL} ${BASH_REMATCH[0]}\n"
    else
      printf "\n${RED}✖ ${NORMAL} ${BASH_REMATCH[0]}\n"
    fi
  else 
    echo 'no match!'
  fi

done

